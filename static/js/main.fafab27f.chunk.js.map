{"version":3,"sources":["contract/directions.ts","component/Style.ts","component/TileView.tsx","component/RowView.tsx","component/Main.tsx","index.tsx"],"names":["direction","styles","tileView","height","width","backgroundColor","margin","color","fontSize","fontWeight","EmptyTileView","ButtonText","PageHeader","WinCard","padding","TileView","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickButton","directionToMove","onMoveTile","tile","shouldDownDisable","rowIndex","colIndex","board","length","shouldUpDisable","shouldLeftDisable","shouldRightDisable","inherits","createClass","key","value","_this2","row","col","react_default","a","createElement","Fragment","index_es","style","className","disabled","onClick","event","up","left","concat","right","down","React","Component","RowView","getTileColumns","map","index","component_TileView","tileColumns","Main","newBoard","toConsumableArray","state","tileValue","setState","getRows","component_RowView","allBoards","require","boardIndex","Math","floor","random","isBoardComplete","finalBoard","newboard","winBadge","rows","minHeight","ReactDOM","render","component_Main","document","getElementById"],"mappings":"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","file":"static/js/main.fafab27f.chunk.js","sourcesContent":["export enum direction{\r\n    up,\r\n    left,\r\n    down,\r\n    right\r\n}","export const styles = {\r\n\r\n    tileView:{\r\n        height: `8rem`,\r\n        width: `10rem`,\r\n        backgroundColor : `darkgrey`,\r\n        margin: `10px`,\r\n        color: `white`,\r\n        fontSize: `xx-large`,\r\n        fontWeight: 800\r\n    },\r\n\r\n    EmptyTileView:{\r\n        height: `8rem`,\r\n        width: `10rem`,\r\n        margin: `10px`,\r\n    },\r\n\r\n    ButtonText:{\r\n        fontSize: `initial`,\r\n        fontWeight: 800\r\n    },\r\n\r\n    PageHeader:{\r\n        fontSize: `x-large`,\r\n        fontWeight: 800,\r\n        color: `white`\r\n    },\r\n\r\n    WinCard:{\r\n        height: `8rem`,\r\n        width: `8rem`,\r\n        margin: `10px`,\r\n        color: `green`,\r\n        fontSize: `xx-large`,\r\n        padding: `10px`,\r\n        fontWeight: 800,\r\n        backgroundColor : `lightgreen`,\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport { ButtonBase, Button, Card } from '@material-ui/core';\r\nimport { tile } from '../contract/tile';\r\nimport { direction } from '../contract/directions';\r\nimport { styles } from './Style';\r\n\r\ninterface ITileViewProps {\r\n    board: number[][],\r\n    tile: tile,\r\n    onMoveTile: Function,\r\n}\r\n\r\ninterface ITileViewStates {\r\n}\r\n\r\nexport class TileView extends React.Component<ITileViewProps, ITileViewStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    handleClickButton = (directionToMove: direction) => {\r\n        this.props.onMoveTile(this.props.tile, directionToMove)\r\n    }\r\n\r\n    shouldDownDisable = () => {\r\n        let rowIndex = this.props.tile.rowIndex\r\n        let colIndex = this.props.tile.colIndex\r\n\r\n        return rowIndex === this.props.board.length - 1 || this.props.board[rowIndex + 1][colIndex] !== 0\r\n    }\r\n\r\n    shouldUpDisable = () => {\r\n        let rowIndex = this.props.tile.rowIndex\r\n        let colIndex = this.props.tile.colIndex\r\n\r\n        return rowIndex === 0 || this.props.board[rowIndex - 1][colIndex] !== 0\r\n    }\r\n\r\n    shouldLeftDisable = () => {\r\n        let rowIndex = this.props.tile.rowIndex\r\n        let colIndex = this.props.tile.colIndex\r\n\r\n        return colIndex === 0 || this.props.board[rowIndex][colIndex - 1] !== 0\r\n    }\r\n\r\n    shouldRightDisable = () => {\r\n        let rowIndex = this.props.tile.rowIndex\r\n        let colIndex = this.props.tile.colIndex\r\n\r\n        return colIndex === this.props.board[0].length - 1 || this.props.board[rowIndex][colIndex + 1] !== 0\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let row = this.props.tile.rowIndex\r\n        let col = this.props.tile.colIndex\r\n\r\n        if (this.props.board[row][col] !== 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Card style={styles.tileView}>\r\n                        <div className=\"layout-column\">\r\n                            <Button disabled={this.shouldUpDisable()}\r\n                                onClick={event => this.handleClickButton(direction.up)}\r\n                            >\r\n                                <span style={styles.ButtonText}>Up</span>\r\n                            </Button>\r\n                            <div className=\"layout-row\">\r\n                                <Button disabled={this.shouldLeftDisable()}\r\n                                    onClick={event => this.handleClickButton(direction.left)}\r\n                                >\r\n                                    <span style={styles.ButtonText}>Left</span>\r\n                                </Button>\r\n                                <div>{`${this.props.board[row][col]}`}</div>\r\n                                <Button disabled={this.shouldRightDisable()}\r\n                                    onClick={event => this.handleClickButton(direction.right)}\r\n                                >\r\n                                    <span style={styles.ButtonText}>Right</span>\r\n                                </Button>\r\n                            </div>\r\n                            <Button disabled={this.shouldDownDisable()}\r\n                                onClick={event => this.handleClickButton(direction.down)}\r\n                            >\r\n                                <span style={styles.ButtonText}>Down</span>\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </Card>\r\n\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <div style={styles.EmptyTileView}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TileView;","import React from 'react';\r\nimport { ButtonBase, Button } from '@material-ui/core';\r\nimport TileView from './TileView';\r\n\r\ninterface IRowViewProps {\r\n    board: number[][],\r\n    rowIndex: number,\r\n    onMoveTile: Function\r\n}\r\n\r\ninterface IRowViewStates {\r\n}\r\n\r\n\r\nexport class RowView extends React.Component<IRowViewProps, IRowViewStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    getTileColumns = () => {\r\n        return this.props.board[this.props.rowIndex].map((tile, index)=>(\r\n            <TileView \r\n                board={this.props.board}\r\n                tile={ {\r\n                    colIndex : index,\r\n                    rowIndex: this.props.rowIndex\r\n                }}\r\n                onMoveTile={this.props.onMoveTile}\r\n            />\r\n        ))\r\n    }\r\n\r\n    render() {\r\n        let tileColumns = this.getTileColumns()\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout-row\">\r\n                    {tileColumns}\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RowView;","import React from 'react';\r\nimport { ButtonBase, Button, Card } from '@material-ui/core';\r\nimport { styles } from './Style';\r\nimport RowView from './RowView';\r\nimport { direction } from '../contract/directions';\r\nimport { tile } from '../contract/tile';\r\n\r\ninterface IMainProps {\r\n}\r\n\r\ninterface IMainStates {\r\n    board: number[][]\r\n}\r\n\r\nfunction getHomeStyle() {\r\n    return {\r\n        minHeight: \"-webkit-fill-available\",\r\n        backgroundColor: \"#252121\"\r\n    }\r\n}\r\n\r\nexport class Main extends React.Component<IMainProps, IMainStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        let newboard = [[1, 2, 5, 3], [4, 0, 6, 7], [8, 9, 11, 10], [13, 12, 15, 14]]\r\n        newboard = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 0, 15]]\r\n        this.state = { board: newboard }\r\n    }\r\n\r\n    onMoveTile = (tile: tile, directionToMove: direction) => {\r\n        let newBoard = [...this.state.board]\r\n        let tileValue = newBoard[tile.rowIndex][tile.colIndex]\r\n        newBoard[tile.rowIndex][tile.colIndex] = 0\r\n\r\n        switch (directionToMove) {\r\n            case direction.up:\r\n                newBoard[tile.rowIndex - 1][tile.colIndex] = tileValue\r\n                break;\r\n\r\n            case direction.left:\r\n                newBoard[tile.rowIndex][tile.colIndex - 1] = tileValue\r\n                break;\r\n\r\n            case direction.down:\r\n                newBoard[tile.rowIndex + 1][tile.colIndex] = tileValue\r\n                break;\r\n\r\n            case direction.right:\r\n                newBoard[tile.rowIndex][tile.colIndex + 1] = tileValue\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({ board: newBoard })\r\n\r\n    }\r\n\r\n    getRows = () => {\r\n        return this.state.board.map((row, index) => (\r\n            <RowView\r\n                board={this.state.board}\r\n                rowIndex={index}\r\n                onMoveTile={this.onMoveTile}\r\n            />\r\n        ))\r\n    }\r\n\r\n    newBoard = () => {\r\n        let allBoards = require('../contract/PlayBoard.json')\r\n        let min = 0\r\n        let max = 5\r\n        let boardIndex = Math.floor(Math.random() * (+max - +min)) + +min\r\n        this.setState({ board: allBoards[boardIndex] })\r\n    }\r\n\r\n    isBoardComplete = () => {\r\n        let finalBoard = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 0]]\r\n\r\n        for(let row=0; row<4; row++){\r\n            for(let col=0; col<4; col++){\r\n                if( this.state.board[row][col] !== finalBoard[row][col]) return false\r\n            }\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    render() {\r\n        let rows = this.getRows()\r\n\r\n        let winBadge;\r\n        if (this.isBoardComplete()) {\r\n            winBadge = (\r\n                <Card style={styles.WinCard}>\r\n                    <span>You Win !!!</span>\r\n                </Card>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout-row\" style={getHomeStyle()}>\r\n                    <div className=\"flex-20\" ></div>\r\n                    <div className=\"flex-60 layout-column layout-align-center-center\" >\r\n                        <span style={styles.PageHeader}>15 Puzzle Challange</span>\r\n                        {rows}\r\n                    </div>\r\n                    <div className=\"flex-20\" >\r\n                        <Button onClick={this.newBoard}\r\n                            color=\"primary\">\r\n                            <span style={styles.ButtonText}>New Board</span>\r\n                        </Button>\r\n\r\n                        {winBadge}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './component/Main';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n"],"sourceRoot":""}